# 코너 만나는 것을 확인하는 함수
def conerCheck():
    global l5
    global r4
    global f2
    global leftConer
    global rightConer
    global forwardClose

    f2 = sensor.IR[2]
    r4 = sensor.IR[4]
    l5 = sensor.IR[5]

    # 초기화 및 설정 (코너 확인)
    if(l5 != 0):
        leftConer = False
    elif(r4 != 0):
        rightConer = False

    if(l5 == 0):
        leftConer = True
        forwardCloseCheck()
        print("left")
    elif(r4 == 0):
        rightConer = True
        forwardCloseCheck()
        print("right")
    else :
        leftConer = False
        rightConer = False 


# 코너 체크가 되었다면, 앞이 막혔는지 확인하는 함수
def forwardCloseCheck():
    global f2

    global forwardClose

    global leftConer
    global rightConer

    global turnCheck

    if(f2 >= 80):
        Go(0, 0)

        turnCheck = True
        
        # 멈춘 후, 빈 방향으로 꺾기 함수 실행
        if(leftConer == True):
            while turnCheck:
                conerTurn("left")
                
        elif(rightConer == True):
            while turnCheck:
                conerTurn("right")


# 코너 돌기
def conerTurn(result):
    turnValue = 0
    
    # 오른쪽 or 왼쪽
    if(result == "left"):
        turnValue = -127
    elif(result == "right"):
        turnValue = 127

    #print(result)
    # ----------------------------------

    # 회전이동 시작
    # 벽에 부딪히는지 확인
    f1 = 0
    global f2
    f3 = 0
    f1Check = False
    f3Check = False


    b6 = 0 # 뒤 센서

    # 다 돌았을 경우 초기화할 변수들
    global leftConer
    global rightConer
    global forwardClose
    global backValue

    f1 = sensor.IR[1]
    f2 = sensor.IR[2]
    f3 = sensor.IR[3]

    # 지금부터는 뒤로 다시 돌아가는 것 ====================

    # 뒤로 다시 회전 초기 설정
    if(f1 >= 70):
        f1Check = True
    elif(f3 >= 70):
        f3Check = True


    # 회전하며 이동하자 (뒤로)
    # 먼저 뒤에 부딪히는지 확인
    if(b6>=300):
        Go(0, 0)
        f1Check = False
        f3Check = False

        if ( backValue < 0 ) : 
            Steering(127)
        elif ( backValue > 0 ) : 
            Steering(-127)
        else :
            Steering(0)
    elif(f1Check == True):
        Steering(-30) # 왼쪽으로 핸들
        Go(-290, -290)
        backValue = -50
        #print(f1Check, f3Check)
    elif(f3Check == True):
        Steering(30) # 오른쪽으로 핸들 => 바퀴가 잘 안돌아가서 50으로 변경
        Go(-290, -290)
        backValue = 50
        #print(f1Check, f3Check)
    # 아무것도 해당하지 않을 경우
    else:
        #print("TurnValue : " + str(turnValue))
        #Steering(turnValue*-1)
        #Steering(0)
        #backFlag = 0
        if ( backValue < 0 ) : 
            Steering(127)
        elif ( backValue > 0 ) : 
            Steering(-127)
        else :
            Steering(0)

        Go(290, 290)

    # 만약 다 돌았을 경우 => f1,2,3 센서가 아무것도 감지하지 않을 경우
    if(f1 < 50 and f2 < 10 and f3 < 50):
        global turnCheck

        turnCheck = False
        #print("회전 종료")
        if  leftConer ==False :
            Steering(50)
        elif rightConer==True :
            Steering(-50)
        else :                    
            Steering(0)
